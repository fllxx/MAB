import 'package:flutter/material.dart';
import 'package:your_project_name/mqtt_service.dart'; 
// Import the MqttService class
import 'package:flutter_application_final/mqttservice.dart';


class RealTimeStatusWidget extends StatefulWidget {
  final MqttService mqttService;

  RealTimeStatusWidget({required this.mqttService});

  @override
  _RealTimeStatusWidgetState createState() => _RealTimeStatusWidgetState();
}

class _RealTimeStatusWidgetState extends State<RealTimeStatusWidget> {
  late MqttService _mqttService;

  String deviceStatus = 'Disconnected';
  String lastStatusChangeTime = '';

  @override
  void initState() {
    super.initState();
    _mqttService = widget.mqttService;

    // Listen for real-time updates
    _mqttService.onDataReceived = (temperature, humidity, lightState) {
      setState(() {
        // Update status based on data or device state
        if (_mqttService.isDataReceived(_mqttService.id)) {
          deviceStatus = 'Online';
          lastStatusChangeTime = 'Last data received at ${DateTime.now().toString()}';
        } else {
          deviceStatus = 'Disconnected';
          lastStatusChangeTime = 'No data received for a while';
        }
      });
    };

    // Additional logic if needed to monitor device status
    monitorDeviceStatus();
  }

  void monitorDeviceStatus() {
    // Logic to monitor device status periodically (could be MQTT-specific)
    // You could periodically check for connection status or incoming data
    Future.delayed(Duration(seconds: 10), () {
      setState(() {
        // Update status based on connection or data
        if (_mqttService.isDataReceived(_mqttService.id)) {
          deviceStatus = 'Online';
          lastStatusChangeTime = 'Last data received at ${DateTime.now().toString()}';
        } else {
          deviceStatus = 'Disconnected';
          lastStatusChangeTime = 'No data received for a while';
        }
      });
    });
  }

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        Text(
          'Status',
          style: TextStyle(
            fontSize: 20, // Adjust the font size as per your design
            fontWeight: FontWeight.bold,
          ),
        ),
        const SizedBox(height: 10), // Add space between title and status
        Text(
          deviceStatus,
          style: TextStyle(
            fontSize: 18,
            fontWeight: FontWeight.w500,
            color: deviceStatus == 'Online' ? Colors.green : Colors.red,
          ),
        ),
        const SizedBox(height: 10),
        Text(
          lastStatusChangeTime,
          style: TextStyle(
            fontSize: 16,
            fontStyle: FontStyle.italic,
          ),
        ),
      ],
    );
  }
}
